//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace FPBWordScrambleClient.WordScrambleServiceReference {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="WordScrambleExceptions.GameBeingHostedException", Namespace="http://schemas.datacontract.org/2004/07/FPBWordScramble")]
    [System.SerializableAttribute()]
    public partial class WordScrambleExceptionsGameBeingHostedException : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string HostMessageField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string HostMessage {
            get {
                return this.HostMessageField;
            }
            set {
                if ((object.ReferenceEquals(this.HostMessageField, value) != true)) {
                    this.HostMessageField = value;
                    this.RaisePropertyChanged("HostMessage");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Word", Namespace="http://schemas.datacontract.org/2004/07/FPBWordScramble")]
    [System.SerializableAttribute()]
    public partial class Word : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string scrambledWordField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string unscrambledWordField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string scrambledWord {
            get {
                return this.scrambledWordField;
            }
            set {
                if ((object.ReferenceEquals(this.scrambledWordField, value) != true)) {
                    this.scrambledWordField = value;
                    this.RaisePropertyChanged("scrambledWord");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string unscrambledWord {
            get {
                return this.unscrambledWordField;
            }
            set {
                if ((object.ReferenceEquals(this.unscrambledWordField, value) != true)) {
                    this.unscrambledWordField = value;
                    this.RaisePropertyChanged("unscrambledWord");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="WordScrambleExceptions.MaximumNumberOfPlayersReachedException", Namespace="http://schemas.datacontract.org/2004/07/FPBWordScramble")]
    [System.SerializableAttribute()]
    public partial class WordScrambleExceptionsMaximumNumberOfPlayersReachedException : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string MaxPlayersMessageField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string MaxPlayersMessage {
            get {
                return this.MaxPlayersMessageField;
            }
            set {
                if ((object.ReferenceEquals(this.MaxPlayersMessageField, value) != true)) {
                    this.MaxPlayersMessageField = value;
                    this.RaisePropertyChanged("MaxPlayersMessage");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="WordScrambleExceptions.HostCannotJoinTheGameException", Namespace="http://schemas.datacontract.org/2004/07/FPBWordScramble")]
    [System.SerializableAttribute()]
    public partial class WordScrambleExceptionsHostCannotJoinTheGameException : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string HostJoinMessageField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string HostJoinMessage {
            get {
                return this.HostJoinMessageField;
            }
            set {
                if ((object.ReferenceEquals(this.HostJoinMessageField, value) != true)) {
                    this.HostJoinMessageField = value;
                    this.RaisePropertyChanged("HostJoinMessage");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="WordScrambleExceptions.GameIsNotBeingHostedException", Namespace="http://schemas.datacontract.org/2004/07/FPBWordScramble")]
    [System.SerializableAttribute()]
    public partial class WordScrambleExceptionsGameIsNotBeingHostedException : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NonHostMessageField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string NonHostMessage {
            get {
                return this.NonHostMessageField;
            }
            set {
                if ((object.ReferenceEquals(this.NonHostMessageField, value) != true)) {
                    this.NonHostMessageField = value;
                    this.RaisePropertyChanged("NonHostMessage");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="WordScrambleExceptions.PlayerNotPlayingTheGameException", Namespace="http://schemas.datacontract.org/2004/07/FPBWordScramble")]
    [System.SerializableAttribute()]
    public partial class WordScrambleExceptionsPlayerNotPlayingTheGameException : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PlayerNotPlayingField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PlayerNotPlaying {
            get {
                return this.PlayerNotPlayingField;
            }
            set {
                if ((object.ReferenceEquals(this.PlayerNotPlayingField, value) != true)) {
                    this.PlayerNotPlayingField = value;
                    this.RaisePropertyChanged("PlayerNotPlaying");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="WordScrambleServiceReference.IWordScramble")]
    public interface IWordScramble {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWordScramble/isGameBeingHosted", ReplyAction="http://tempuri.org/IWordScramble/isGameBeingHostedResponse")]
        bool isGameBeingHosted();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWordScramble/isGameBeingHosted", ReplyAction="http://tempuri.org/IWordScramble/isGameBeingHostedResponse")]
        System.Threading.Tasks.Task<bool> isGameBeingHostedAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWordScramble/hostGame", ReplyAction="http://tempuri.org/IWordScramble/hostGameResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(FPBWordScrambleClient.WordScrambleServiceReference.WordScrambleExceptionsGameBeingHostedException), Action="http://tempuri.org/IWordScramble/hostGameGameBeingHostedExceptionFault", Name="WordScrambleExceptions.GameBeingHostedException", Namespace="http://schemas.datacontract.org/2004/07/FPBWordScramble")]
        string hostGame(string userName, string wordToScramble);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWordScramble/hostGame", ReplyAction="http://tempuri.org/IWordScramble/hostGameResponse")]
        System.Threading.Tasks.Task<string> hostGameAsync(string userName, string wordToScramble);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWordScramble/join", ReplyAction="http://tempuri.org/IWordScramble/joinResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(FPBWordScrambleClient.WordScrambleServiceReference.WordScrambleExceptionsMaximumNumberOfPlayersReachedException), Action="http://tempuri.org/IWordScramble/joinMaximumNumberOfPlayersReachedExceptionFault", Name="WordScrambleExceptions.MaximumNumberOfPlayersReachedException", Namespace="http://schemas.datacontract.org/2004/07/FPBWordScramble")]
        [System.ServiceModel.FaultContractAttribute(typeof(FPBWordScrambleClient.WordScrambleServiceReference.WordScrambleExceptionsHostCannotJoinTheGameException), Action="http://tempuri.org/IWordScramble/joinHostCannotJoinTheGameExceptionFault", Name="WordScrambleExceptions.HostCannotJoinTheGameException", Namespace="http://schemas.datacontract.org/2004/07/FPBWordScramble")]
        [System.ServiceModel.FaultContractAttribute(typeof(FPBWordScrambleClient.WordScrambleServiceReference.WordScrambleExceptionsGameIsNotBeingHostedException), Action="http://tempuri.org/IWordScramble/joinGameIsNotBeingHostedExceptionFault", Name="WordScrambleExceptions.GameIsNotBeingHostedException", Namespace="http://schemas.datacontract.org/2004/07/FPBWordScramble")]
        FPBWordScrambleClient.WordScrambleServiceReference.Word join(string playerName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWordScramble/join", ReplyAction="http://tempuri.org/IWordScramble/joinResponse")]
        System.Threading.Tasks.Task<FPBWordScrambleClient.WordScrambleServiceReference.Word> joinAsync(string playerName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWordScramble/guessWord", ReplyAction="http://tempuri.org/IWordScramble/guessWordResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(FPBWordScrambleClient.WordScrambleServiceReference.WordScrambleExceptionsPlayerNotPlayingTheGameException), Action="http://tempuri.org/IWordScramble/guessWordPlayerNotPlayingTheGameExceptionFault", Name="WordScrambleExceptions.PlayerNotPlayingTheGameException", Namespace="http://schemas.datacontract.org/2004/07/FPBWordScramble")]
        bool guessWord(string playerName, string guessedWord, string unscrambledWord);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWordScramble/guessWord", ReplyAction="http://tempuri.org/IWordScramble/guessWordResponse")]
        System.Threading.Tasks.Task<bool> guessWordAsync(string playerName, string guessedWord, string unscrambledWord);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IWordScrambleChannel : FPBWordScrambleClient.WordScrambleServiceReference.IWordScramble, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class WordScrambleClient : System.ServiceModel.ClientBase<FPBWordScrambleClient.WordScrambleServiceReference.IWordScramble>, FPBWordScrambleClient.WordScrambleServiceReference.IWordScramble {
        
        public WordScrambleClient() {
        }
        
        public WordScrambleClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public WordScrambleClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public WordScrambleClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public WordScrambleClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public bool isGameBeingHosted() {
            return base.Channel.isGameBeingHosted();
        }
        
        public System.Threading.Tasks.Task<bool> isGameBeingHostedAsync() {
            return base.Channel.isGameBeingHostedAsync();
        }
        
        public string hostGame(string userName, string wordToScramble) {
            return base.Channel.hostGame(userName, wordToScramble);
        }
        
        public System.Threading.Tasks.Task<string> hostGameAsync(string userName, string wordToScramble) {
            return base.Channel.hostGameAsync(userName, wordToScramble);
        }
        
        public FPBWordScrambleClient.WordScrambleServiceReference.Word join(string playerName) {
            return base.Channel.join(playerName);
        }
        
        public System.Threading.Tasks.Task<FPBWordScrambleClient.WordScrambleServiceReference.Word> joinAsync(string playerName) {
            return base.Channel.joinAsync(playerName);
        }
        
        public bool guessWord(string playerName, string guessedWord, string unscrambledWord) {
            return base.Channel.guessWord(playerName, guessedWord, unscrambledWord);
        }
        
        public System.Threading.Tasks.Task<bool> guessWordAsync(string playerName, string guessedWord, string unscrambledWord) {
            return base.Channel.guessWordAsync(playerName, guessedWord, unscrambledWord);
        }
    }
}
